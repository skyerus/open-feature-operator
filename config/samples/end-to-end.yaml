# A basic flag custom resource
apiVersion: core.openfeature.dev/v1alpha1
kind: FeatureFlagConfiguration
metadata:
  name: end-to-end
spec:
  featureFlagSpec:
    flags:
      new-welcome-message:
        state: ENABLED
        variants:
          "on": true
          "off": false
        defaultVariant: "on"
      hex-color:
        state: ENABLED
        variants:
          red: CC0000
          green: 00CC00
          blue: 0000CC
          yellow: yellow
        defaultVariant: blue
      fib-algo:
        state: ENABLED
        variants:
          recursive: recursive
          memo: memo
          loop: loop
          binet: binet
        defaultVariant: recursive
        targeting: {
            "if": [
              {
                "in": ["@faas.com", {
                  "var": ["email"]
                }]
              }, "binet", null
            ]
          }
---
# Deployment of a demo-app using our custom resource
apiVersion: apps/v1
kind: Deployment
metadata:
  name: open-feature-demo-deployment
  labels:
    app: open-feature-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: open-feature-demo
  template:
    metadata:
      labels:
        app: open-feature-demo
      annotations:
        openfeature.dev: "enabled"
        openfeature.dev/featureflagconfiguration: "end-to-end"
    spec:
      serviceAccountName: open-feature-demo-sa
      containers:
      - name: open-feature-demo
        image: ghcr.io/open-feature/playground-app:v0.1.1
        args:
          - flagd
        ports:
          - containerPort: 30000
---
# Service exposed using NodePort
apiVersion: v1
kind: Service
metadata:
  name: open-feature-demo-service
spec:
  type: ClusterIP
  selector:
    app: open-feature-demo
  ports:
  - protocol: TCP
    port: 30000
    targetPort: 30000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: open-feature-demo-sa
automountServiceAccountToken: true